AWSTemplateFormatVersion: '2010-09-09'

# export SAM_AWS_ACCOUNT_ID=<your-aws-account-id>
# export SAM_AWS_REGION=<the-aws-region-you-want-to-use>
# export SAM_AWS_PROFILE=<the-profile-name-in-your-credentials-file>
# export SAM_STAGE=dev
# export SAM_BUCKET_NAME=$SAM_AWS_ACCOUNT_ID-$SAM_AWS_REGION-sam-cli-source-bucket
# export SAM_WORKLOAD=shh
# export SAM_WORKLOAD_LONG=social-hacking-helper

# --------------------------------------------------------------------------------------------------

Description: >
  Social Hacking Helper.
  Template to setup AWS Cloud9 for the workshop + make some infrastructure preparations in the AWS account.

# --------------------------------------------------------------------------------------------------

Parameters:

  Stage:
    Description: "Environment stage (dev, test, ..., prod)"
    Type: "String"
    Default: "dev"
  Workload:
    Description: "Short name of the overall workload this service belongs to"
    Type: "String"
    Default: "shh"
  Context:
    Description: "Short name of the context for this service (e.g. backoffice services versus business services)"
    Type: "String"
    Default: "shh-service"
  WorkloadLongName:
    Description: "Long name of the overall workload this service belongs to"
    Type: "String"
    Default: "social-hacking-helper"
  ContextLongName:
    Description: "Long name of the context for this service (e.g. backoffice services versus business services)"
    Type: "String"
    Default: "social-hacking-helper-service"
  LogLevel:
    Description: "Log level for Lambda functions"
    Type: "String"
    Default: "DEBUG"
  LogRetentionInDays:
    Description: "CloudWatch Logs retention in days"
    Type: "Number"
    Default: 14

  ContactCenterDataBucketName:
    Description: "Name suffix (w/o prefixes for acct ID, region, stage, workload) for contact center data bucket"
    Type: "String"
    # Reducing the long name suffix to an abbreviation, otherwise we will likely exceed the max length of 63 chars.
    #Default: "contact-center-data-bucket"
    Default: "shh-cc-data"
  DataLakeDataBucketName:
    Description: "Name suffix (w/o prefixes for acct ID, region, stage, workload) for the data lake data bucket"
    Type: "String"
    # Reducing the long name suffix to an abbreviation, otherwise we will likely exceed the max length of 63 chars.
    #Default: "datalake-raw-data-bucket"
    Default: "shh-dl-data"
  AthenaBucketName:
    Description: "Name suffix (w/o prefixes for acct ID, region, stage, workload) for the Athena data bucket"
    Type: "String"
    Default: "shh-athena-data"

  Cloud9CidrBlock:
    Description: The CIDR block range for your Cloud9 IDE VPC
    Type: String
    Default: 10.73.0.0/28
  GitRepositoryURL:
    Description: The Git repository URL for the project we are cloning
    Type: String
    Default: https://github.com/lmoxiel/social-hacking-helper.git

# --------------------------------------------------------------------------------------------------

Resources:

  # ------------------------------------------------------------------------------------------------

  # One-off activity for a fresh account to fundamentally allow for CW Logs acess from API GW.

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-account.html
  ApiGatewayRoleForCloudWatchLogging:
    Type: AWS::IAM::Role
    Properties:
      #RoleName: "ApiGatewayRoleForCloudWatchLogging"
      RoleName: !Sub "${AWS::Region}-${Stage}-${Workload}-ApiGatewayRoleForCloudWatchLogging"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
      # Not sure yet how meaningful those tags are for the account preparation resources.
      # Tags coming in from sam deploy command.

  DummyApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties: 
      # CustomerId: String
      Description: "Dummy API key as senseless dependency to allow for API GW request logging in fresh AWS accounts"
      Enabled: false
      # GenerateDistinctId: Boolean
      Name: !Sub "${AWS::Region}-${Stage}-${Workload}-IGNORE_THIS_KEY"
      # StageKeys: 
      #   - StageKey
      Value: "API Key value should be at least 20 characters"
      # Not sure yet how meaningful those tags are for the account preparation resources.
      # Tags coming in from sam deploy command.

  # Check the documentation regarding a necessary dependency on another API GW resource:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-account.html
  # Important: If an API Gateway resource has never been created in your AWS account, you must add a dependency
  # on another API Gateway resource, such as an AWS::ApiGateway::RestApi or AWS::ApiGateway::ApiKey resource. 
  ApiGatewayAccountForCloudWatchLogging:
    DependsOn: "DummyApiKey"
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt "ApiGatewayRoleForCloudWatchLogging.Arn"
      # This resource doesn't support tagging.

  # ------------------------------------------------------------------------------------------------

  # S3 bucket to be used as storage for code artifacts from SAM CLI commands.

  SamCliCodeBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "${AWS::AccountId}-${AWS::Region}-sam-cli-code-bucket"
      # Tags coming in from sam deploy command.

  # ------------------------------------------------------------------------------------------------

  # S3 bucket to be used as data storage for Amazon Connect.

  ContactCenterDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::AccountId}-${AWS::Region}-${Stage}-${Workload}-${ContactCenterDataBucketName}"
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: True
      # Tags coming in from sam deploy command.

  SSMParameter4ContactCenterDataBucketName:
    DependsOn: "ContactCenterDataBucket"
    Type: "AWS::SSM::Parameter"
    Properties:
      Type: String
      Name: !Sub "/${Stage}/${Workload}/s3/${ContactCenterDataBucketName}/name"
      Description: "Name of the shared ContactCenterDataBucket"
      Value: !Ref "ContactCenterDataBucket"
      # Tags coming in from sam deploy command.

  SSMParameter4ContactCenterDataBucketArn:
    DependsOn: "ContactCenterDataBucket"
    Type: "AWS::SSM::Parameter"
    Properties:
      Type: String
      Name: !Sub "/${Stage}/${Workload}/s3/${ContactCenterDataBucketName}/arn"
      Description: "ARN of the shared ContactCenterDataBucket"
      Value: !GetAtt "ContactCenterDataBucket.Arn"
      # Tags coming in from sam deploy command.

  # S3 bucket to be used as data storage for our little data lake.

  DataLakeDataBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: "Delete"
    Properties: 
      BucketName: !Sub "${AWS::AccountId}-${AWS::Region}-${Stage}-${Workload}-${DataLakeDataBucketName}"
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: True
      # Tags coming in from sam deploy command.

  SSMParameter4DataLakeDataBucketName:
    DependsOn: "DataLakeDataBucket"
    Type: "AWS::SSM::Parameter"
    Properties:
      Type: String
      Name: !Sub "/${Stage}/${Workload}/s3/${DataLakeDataBucketName}/name"
      Description: "Name of the shared DataLakeDataBucket"
      Value: !Ref "DataLakeDataBucket"
      # Tags coming in from sam deploy command.

  SSMParameter4DataLakeDataBucketArn:
    DependsOn: "DataLakeDataBucket"
    Type: "AWS::SSM::Parameter"
    Properties:
      Type: String
      Name: !Sub "/${Stage}/${Workload}/s3/${DataLakeDataBucketName}/arn"
      Description: "ARN of the shared DataLakeDataBucket"
      Value: !GetAtt "DataLakeDataBucket.Arn"
      # Tags coming in from sam deploy command.

  # S3 bucket to be used as data storage for data to be queried by Amazon Athena.

  AthenaBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: "Delete"
    Properties: 
      BucketName: !Sub "${AWS::AccountId}-${AWS::Region}-${Stage}-${Workload}-${AthenaBucketName}"

  SSMParameter4AthenaBucketName:
    DependsOn: "AthenaBucket"
    Type: "AWS::SSM::Parameter"
    Properties:
      Type: String
      Name: !Sub "/${Stage}/${Workload}/s3/${AthenaBucketName}/name"
      Description: "Name of the shared AthenaBucket"
      Value: !Ref "AthenaBucket"
      # Tags coming in from sam deploy command.

  SSMParameter4AthenaBucketArn:
    DependsOn: "AthenaBucket"
    Type: "AWS::SSM::Parameter"
    Properties:
      Type: String
      Name: !Sub "/${Stage}/${Workload}/s3/${AthenaBucketName}/arn"
      Description: "ARN of the shared AthenaBucket"
      Value: !GetAtt "AthenaBucket.Arn"
      # Tags coming in from sam deploy command.

  # ------------------------------------------------------------------------------------------------

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref Cloud9CidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-VPC"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-InternetGateway"

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'VPC'
      InternetGatewayId: !Ref 'InternetGateway'

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-RouteTable"

  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref 'RouteTable'
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref 'InternetGateway'

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      CidrBlock: !Ref Cloud9CidrBlock
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PublicSubnet1"

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTable

  # ------------------------------------------------------------------------------------------------

  Cloud9:
    Type: AWS::Cloud9::EnvironmentEC2
    Properties:
      AutomaticStopTimeMinutes: 30
      Description: "Social Hacking Helper - Development Environment"
      InstanceType: t3.micro
      ImageId: amazonlinux-2-x86_64
      Name: !Sub "SHH-IDE-${AWS::StackName}"
      Repositories:
        - PathComponent: /speechai-workshop
          RepositoryUrl: !Ref GitRepositoryURL
      SubnetId: !Ref PublicSubnet1
      OwnerArn: !Sub "arn:aws:sts::${AWS::AccountId}:assumed-role/TeamRole/MasterKey"

  # ------------------------------------------------------------------------------------------------

Outputs:

  Cloud9EnvUrl:
    Description: Cloud9 Environment URL
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/cloud9/ide/${Cloud9}"
